DROP TABLE FOTO;
DROP TABLE SEGURO;
DROP TABLE BONUS;
DROP TABLE ADQUIERE;
DROP TABLE ENTRADA;
DROP TABLE PAGO;
DROP TABLE COMENTARIO;
DROP TABLE PARTICIPAEN;
DROP TABLE USUARIO;
DROP TABLE INCIDENCIA;
DROP TABLE GRUPO;
DROP TABLE TOUR;
DROP TABLE GUIA;

CREATE TABLE GUIA(
        ID_GUIA NUMBER(3),
		PASS_USER VARCHAR2(20) NOT NULL,
        NOMBRE VARCHAR2(30) NOT NULL,
        APELLIDO VARCHAR2(30) NOT NULL,
        DNI VARCHAR2(9) NOT NULL UNIQUE,
		EMAIL VARCHAR2(50) NOT NULL UNIQUE,
        NUM_ACREDITACION NUMBER(30),
        CONSTRAINT DNI_GUIA CHECK (LENGTH(DNI)=9),

    PRIMARY KEY(ID_GUIA)
);

CREATE TABLE TOUR(
       ID_TOUR NUMBER(3),
        ID_GUIA SMALLINT, 
        NOMBRE VARCHAR2(100),
        TOUR VARCHAR2(15)
                CHECK( TOUR IN('GASTRONOMICO','HISTORICO','RELIGIOSO','MONUMENTAL') ),
        DURACION SMALLINT,
        DESCRIPCION VARCHAR2(500) NOT NULL,
        IMPORTE NUMBER NOT NULL,
        MAX_PLAZAS INT,
    PRIMARY KEY (ID_TOUR),
    FOREIGN KEY (ID_GUIA) REFERENCES GUIA(ID_GUIA)
);

CREATE TABLE GRUPO(
        ID_GRUPO NUMBER(3),
        ID_TOUR NUMBER(3),
        FECHA       DATE    NOT NULL,
        HORA        SMALLINT,
        SUFICIENTE INT,
    PRIMARY KEY(ID_GRUPO),
    FOREIGN KEY(ID_TOUR)    REFERENCES TOUR(ID_TOUR)
);

CREATE TABLE INCIDENCIA(
        ID_INCIDENCIA NUMBER(3),
        ID_GRUPO SMALLINT,
        TEXTO       VARCHAR2(150) NOT NULL,
        FECHA       DATE    NOT NULL,
        HORA        SMALLINT,
    PRIMARY KEY (ID_INCIDENCIA),
    FOREIGN KEY(ID_GRUPO)   REFERENCES GRUPO(ID_GRUPO)
);

CREATE TABLE USUARIO (  
        ID_USUARIO SMALLINT,
		PASS_USER VARCHAR2(20) NOT NULL,
        NOMBRE VARCHAR2(50) NOT NULL,
        APELLIDOS VARCHAR2(50) NOT NULL,
        DNI VARCHAR2(50) NOT NULL UNIQUE,
        TELEFONO VARCHAR2(50) NOT NULL,
        EMAIL VARCHAR2(50) NOT NULL UNIQUE,
        FECHA_NAC DATE DEFAULT sysdate NOT NULL,
        CONSTRAINT DNI_USUARIO CHECK (LENGTH(DNI)=9),
    PRIMARY KEY (ID_USUARIO)
);

CREATE TABLE PARTICIPAEN (
    ID_PARTICIPAEN SMALLINT PRIMARY KEY, 
     ID_USUARIO SMALLINT,
   ID_GRUPO SMALLINT,
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
FOREIGN KEY (ID_GRUPO) REFERENCES GRUPO (ID_GRUPO)
);

CREATE TABLE COMENTARIO (
        ID_COMENTARIO SMALLINT PRIMARY KEY, 
        ID_USUARIO REAL,
        ID_TOUR SMALLINT,
        TEXTO VARCHAR2(300) NOT NULL,
    FOREIGN KEY (ID_TOUR) REFERENCES TOUR (ID_TOUR),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO)

);

CREATE TABLE PAGO(
        ID_PAGO NUMBER(3),
        ID_USUARIO SMALLINT,
        FECHA_PAGO DATE,
        IMPORTE NUMBER,
    PRIMARY KEY (ID_PAGO),
    FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE ENTRADA(
        ID_ENTRADA NUMBER(3),
        ID_PAGO SMALLINT,
        IMPORTE NUMBER,
        TIPO_ENTRADA VARCHAR2(15)
                CHECK( TIPO_ENTRADA IN('MUSEO','GIRALDA','PATIO','COMEDOR'
                ,'PALACIOS','BARISTA') ),
    PRIMARY KEY(ID_ENTRADA),
    FOREIGN KEY(ID_PAGO)    REFERENCES PAGO(ID_PAGO)
);

CREATE TABLE ADQUIERE (
        ID_ADQUIERE SMALLINT PRIMARY KEY, 
        ID_TOUR SMALLINT,
        ID_ENTRADA SMALLINT,
    FOREIGN KEY (ID_TOUR) REFERENCES TOUR (ID_TOUR),
    FOREIGN KEY (ID_ENTRADA) REFERENCES ENTRADA (ID_ENTRADA)
);

CREATE TABLE SEGURO (
        ID_SEGURO SMALLINT,
        IMPORTE NUMBER,
        ID_PAGO SMALLINT,
        TIPO_SEGURO VARCHAR(15)
                CHECK( TIPO_SEGURO IN('CANCELACION','ACCIDENTES') ),
    PRIMARY KEY(ID_SEGURO),
    FOREIGN KEY(ID_PAGO)    REFERENCES PAGO(ID_PAGO)
);

CREATE TABLE BONUS (
        ID_BONUS NUMBER(3),
        ID_PAGO SMALLINT,
        TIPO_TEMPORADA VARCHAR2(15),
        IMPORTE NUMBER,
    PRIMARY KEY(ID_BONUS),
    FOREIGN KEY(ID_PAGO)    REFERENCES PAGO(ID_PAGO)
);

CREATE TABLE FOTO (
        ID_FOTO SMALLINT,
        URL_FOTO  VARCHAR2(30) NOT NULL,
        ID_TOUR SMALLINT,
    PRIMARY KEY(ID_FOTO),
    FOREIGN KEY(ID_TOUR)    REFERENCES TOUR(ID_TOUR)
);