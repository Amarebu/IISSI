create or replace TRIGGER MINIMO_GRUPO 
BEFORE INSERT OR UPDATE ON PARTICIPAEN
FOR EACH ROW
DECLARE
  MINI INTEGER;
  UNI SMALLINT;
  MEDIO INTEGER;
BEGIN
      
  SELECT ID_TOUR INTO MEDIO FROM GRUPO WHERE ID_GRUPO = :NEW.ID_GRUPO;
  SELECT MAX_PLAZAS INTO MINI FROM TOUR WHERE ID_TOUR = MEDIO;
  SELECT COUNT(*) INTO UNI FROM PARTICIPAEN WHERE ID_GRUPO = :NEW.ID_GRUPO;
  IF(UNI>= ROUND(MINI*25/100)-1)
    THEN UPDATE GRUPO SET SUFICIENTE = '1' WHERE  ID_GRUPO = :NEW.ID_GRUPO;  

  END IF;
END;
/

create or replace TRIGGER MAXIMO_GRUPO 
BEFORE INSERT OR UPDATE ON PARTICIPAEN
FOR EACH ROW
DECLARE
  MAXIM INTEGER;
  UN INTEGER;
  MEDIO INTEGER;
BEGIN
  SELECT ID_TOUR INTO MEDIO FROM GRUPO WHERE ID_GRUPO = :NEW.ID_GRUPO;
  SELECT MAX_PLAZAS INTO MAXIM FROM TOUR WHERE ID_TOUR = MEDIO;
  SELECT COUNT(*) INTO UN FROM PARTICIPAEN WHERE ID_GRUPO = :NEW.ID_GRUPO;
  IF(UN>=MAXIM)
    THEN raise_application_error(-20999, ' No pueden entrar más personas en el grupo');
  END IF;
END;
/


CREATE OR REPLACE TRIGGER ASIGNA_GUIA
BEFORE INSERT ON GRUPO
FOR EACH ROW 
DECLARE
	UN NUMBER(3);
    UT NUMBER(3);
BEGIN
	SELECT ID_GUIA INTO UN FROM TOUR WHERE ID_TOUR = :NEW.ID_TOUR;
    SELECT COUNT(*) INTO UT FROM GRUPO WHERE HORA = :NEW.HORA AND FECHA = :NEW.FECHA AND ID_TOUR IN (SELECT ID_TOUR FROM TOUR WHERE ID_GUIA = UN);
    
    IF UT >= 1
        THEN raise_application_error (-20600,:NEW.ID_GRUPO || 'El guia ya está ocupado para esa hora.');
    END IF;
END;
/


CREATE OR REPLACE TRIGGER UN_COMENTARIO
BEFORE INSERT OR UPDATE ON COMENTARIO 
FOR EACH ROW 
DECLARE
    COMENTARIOSHECHOS INTEGER;
BEGIN
  SELECT COUNT(*)INTO COMENTARIOSHECHOS FROM COMENTARIO  WHERE (ID_USUARIO = :NEW.ID_USUARIO AND ID_TOUR = :NEW.ID_TOUR);
  IF (COMENTARIOSHECHOS>=1) 
      THEN raise_application_error(-20610,'Un usuario sólo puede realizar un comentario por tour');
  END IF;    
END;
/


CREATE OR REPLACE TRIGGER FECHA_HORA_INCIDENCIA

BEFORE INSERT OR UPDATE ON INCIDENCIA 

for each row
DECLARE 
    US DATE;
    UN SMALLINT;
BEGIN  
    SELECT GRUPO.FECHA, GRUPO.HORA INTO US, UN FROM GRUPO WHERE ID_GRUPO = :NEW.ID_GRUPO;
    IF(US <> :NEW.FECHA OR UN <> :NEW.HORA)
             
    THEN
        raise_application_error(-20987, ' Esta incidencia no es de este grupo');
        
    END IF;
END;
/